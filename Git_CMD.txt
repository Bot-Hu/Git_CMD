--------------------------------------------------------------------------
---------------------------项目添加版本控制-------------------------------
--------------------------------------------------------------------------
git init
	--在项目文件夹下新建空仓库（不能有中文路径，包括父目录）

--------------------------------------------------------------------------
----------------------------文件提交两步骤--------------------------------
--------------------------------------------------------------------------
git add <file> <file> ...
	--添加文件到暂存区
git commit -m "xxx"
	--把暂存区所以文件提交到仓库，-m "后面输入的是本次提交的说明"

--------------------------------------------------------------------------
--------------------------文件状态及内容状态------------------------------
--------------------------------------------------------------------------
git status
	--显示仓库当前状态，查看什么文件被修改了
git diff <file>
	--查看文件修改内容，“-”为修改前内容，“+”为修改后内容

--------------------------------------------------------------------------
-----------------------------日志历史查看。-------------------------------
--------------------------------------------------------------------------
git log
	--显示从最近到最远的提交日志
	--英文状态按“q”退出日志
git log --pretty=oneline
	--精简输出日志
git reflog
	--查看命令历史

--------------------------------------------------------------------------
--------------------------------版本穿梭。--------------------------------
--------------------------------------------------------------------------
git reset --hard HEAD^
	--“HEAD”当前版本
	--“HEAD^”,上个版本
	--“HEAD^^”上上个版本
	--“HEAD~100”往上100个版本
	--填写版本号也可以（不必填完）

配合 git log    命令，查找以往版本，   git reset 回到过去版本
配合 git reflog 命令，查找最新版本号， git reset 回到最新版本

--------------------------------------------------------------------------
--------------------------------撤销更改。--------------------------------
--------------------------------------------------------------------------
git reset HEAD <file>
	--从暂存区回退工作区
git restore <file>
	--撤销更改

错误位置：
    版本库：回退版本   git reset --hard HEAD^
    暂存区：回退工作区 git reset HEAD <file> ->撤销更改 git restore <file>
    工作区：撤销更改   git restore <file>

--------------------------------------------------------------------------
-------------------关联GitHub远程库并推送本地库内容。---------------------
--------------------------------------------------------------------------
git remote add origin git@github.com:Bot-Hu/远程库名称.git
	--关联GitHub仓库
git push -u origin master
	--关联并推送本地库内容到远程库
git push origin master
	--把本地master分支的最新修改推送至GitHub

--------------------------------------------------------------------------
---------------------------------分支使用。-------------------------------
--------------------------------------------------------------------------
git branch
	--查看分支
git branch <name>
	--创建分支
git switch <name>
	--切换分支
git switch -c <name>
	--创建+切换分支
git merge <name>
	--合并name分支到当前分支
git branch -d <name>
	--删除分支
git log --graph
	--查看分支合并图

git stash
	--保存工作现场
git stash pop
	--恢复工作现场
git cherry-pick <commit>
	--将 commit(eg:1ad52as) 的修改“复制”到当前分支